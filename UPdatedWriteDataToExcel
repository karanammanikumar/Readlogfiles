package com.renault.test;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Scanner;

import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
public class WriteDataToExcel {
     static XSSFWorkbook workbook = new XSSFWorkbook(); 
     static XSSFSheet spreadsheet = workbook.createSheet("Generated "+LocalDate.now());
     static XSSFRow row;
     static XSSFCell cell;
      static CellStyle style = workbook.createCellStyle();

      public static void main( String[] args ) throws IOException {
      File file =new File("D:/Public/Download/1480315348.1344/MOL.ksh_EXPORT_MOL_01t.20161119_070054");
      int i ;
      style.setDataFormat(workbook.createDataFormat().getFormat("hh:mm:ss"));
      String[] alphabets = {"B","C"};
      String s1 = "EnteringprocessNTIMOL";
      String s2 = "Valid documents :";
      String s3 = "Entering copyDVD1";
      String s4 = "Entering processDirCreateForCDorDVDWrite";

      Scanner in = null;
          
      row = spreadsheet.createRow(0);
      cell = row.createCell(0);
      cell.setCellValue("Language");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("contents of valid lang"))
                  {
                	  String split[] = line.split("\\s");
                	  System.out.println("contents of valid lang ......"+split[split.length-2]+split[split.length-1]);
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellValue(split[split.length-2]+split[split.length-1]);
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(2);
      cell = row.createCell(0);
      cell.setCellValue("Start of NTI");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s1))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s1);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(3);
      cell = row.createCell(0);
      cell.setCellValue("End of NTI");
      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s2))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s2);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
     
      row = spreadsheet.createRow(4);
      cell = row.createCell(0);
      cell.setCellValue("Difference");
      for(i=1;i<=44;i++)
      {
    	  for(String alpha: alphabets)
    	  {
           cell = row.createCell(i);
           cell.setCellFormula(alpha+"4-"+alpha+"3");
    	  }
                 
      }
      
      
      row = spreadsheet.createRow(6);
      cell = row.createCell(0);
      cell.setCellValue("Start of TM");
      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s2))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s2);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(7);
      cell = row.createCell(0);
      cell.setCellValue("End of TM");
      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s3))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s3);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(10);
      cell = row.createCell(0);
      cell.setCellValue("start of MR");
      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s3))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s3);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      
      row = spreadsheet.createRow(11);
      cell = row.createCell(0);
      cell.setCellValue("End of MR");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains(s4))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+s4);
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(14);
      cell = row.createCell(0);
      cell.setCellValue("Start time of Dir");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Entering processDirCreateForCDorDVDWrite"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"Entering processDirCreateForCDorDVDWrite");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      
      row = spreadsheet.createRow(15);
      cell = row.createCell(0);
      cell.setCellValue("End time of Dir");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Leaving processDirCreateForCDorDVDWrite"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"Leaving processDirCreateForCDorDVDWrite");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }

      
      row = spreadsheet.createRow(18);
      cell = row.createCell(0);
      cell.setCellValue("Start Time of MOTRIO");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("EnteringcopyMotrio"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"EnteringcopyMotrio");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(19);
      cell = row.createCell(0);
      cell.setCellValue("End Time of MOTRIO");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Entering copyDVD1"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"Entering copyDVD1");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }

      row = spreadsheet.createRow(22);
      cell = row.createCell(0);
      cell.setCellValue("Start of Dvd1");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Entering copyDVD1"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"Entering copyDVD1");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      row = spreadsheet.createRow(26);
      cell = row.createCell(0);
      cell.setCellValue("size");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Size of the"))
                  {
                	  String str[] = line.split("\\s");
                	  System.out.println(str[str.length-1]);
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellValue(str[str.length-1]);;
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      
      row = spreadsheet.createRow(28);
      cell = row.createCell(0);
      cell.setCellValue("Start time of Zipping");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Trying to Commit"))
                  {
                	  String str[] = line.split(",");
                	  System.out.println(str[0]+"------"+"Trying to Commit");
                	  String str1[] = str[0].split(":");
                      cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      
      row = spreadsheet.createRow(29);
      cell = row.createCell(0);
      cell.setCellValue("End time of Zipping");

      try {
    	  i=1;
          in = new Scanner(file);
          while(in.hasNext())
          {
              String line=in.nextLine();
                  if(line.contains("Fin d'execution de"))
                  {
                	  String str[] = line.split("\\s");
                	  System.out.println(str[str.length-1]+"------"+"Fin d'execution de");
                	  String str1[] = str[str.length-10].split(":");
                	  cell = row.createCell(i);
                      cell.setCellStyle(style);
                      cell.setCellFormula("TIME("+str1[0]+","+str1[1]+","+str1[2]+")");
                      i++;
                  }
            
          }   
      } catch (FileNotFoundException e) {
          e.printStackTrace();
      }
      
      System.out.println(spreadsheet.getLastRowNum());
      FileOutputStream out = null;
			try {
				String exepath = "D://exceldata5";
								String bufpath = exepath.concat(".xlsx");
								out = new FileOutputStream (new File(bufpath));
								workbook.write(out);
								System.out.println("Executed successfully 2");
//								SendFromYahoo.send();
								out.close();
						
			} catch (Exception e) {
				e.printStackTrace();
			}

		}

	}
